# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the bin/rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: "Star Wars" }, { name: "Lord of the Rings" }])
#   Character.create(name: "Luke", movie: movies.first)

section1 = Section.create!(name: 'Вступление', description: 'Изучение алгоритмов', order: 1)
section2 = Section.create!(name: 'HTML: База', description: 'Описание раздела 1', order: 2)
section3 = Section.create!(name: 'HTML: Основные элементы', description: 'Описание раздела 2', order: 3)

lesson1 = Lesson.create!(name: 'Приветствие', description: 'Знакомство с курсом', order: 1, section: section1)
LessonUnit.create!(order: 1, lesson: lesson1, content_block: '<h1 style="text-align: center;">Привет!</h1><p>Добро пожаловать на курс! На нём ты узнаешь как работает интернет, научишься создавать сайты с помощью HTML и CSS и размещать их в сети. Попутно освоишь основные инструменты веб-разработчика: редактор кода, отладчик, Google.</p><p>Не бойся страшных непонятных слов! Курс создан специально для людей, которые никогда не программировали и ничего не знают о работе интернета. Тем не менее, часть информации тебе придётся гуглить и осмыслять.</p><p><strong>Если у тебя есть идеи, как сделать курс лучше - пиши их в комментариях</strong>. Жалобы на непонятное и сложное тоже приветствуются.</p>')
LessonUnit.create!(order: 2, lesson: lesson1, content_block: '<h1 style="text-align: center;">Важно</h1><h2>Прежде чем задать вопрос</h2><p>Сначала загугли вопрос, а потом пиши его в комментариях. Часто достаточно просто скопировать текст комментария и вставить его в строку поиска.</p><h2>Учебный чат</h2><p>У этого курса есть чат в Telegram, где ученики обсуждают задания: <a href="https://teleg.run/itc_html_css">https://teleg.run/itc_html_css</a>. Тут ты можешь задавать вопросы по заданиям и общаться с другими участниками курса.</p><p><strong>Правила чата</strong>, за нарушение которых мы можем блокировать пользователей:</p><ol><li>Не скидывать ответы на задания курса.</li><li>Не оскорблять других участников чата.</li><li>Не спамить и не флудить.</li></ol><h2>Компьютер</h2><p>Практические задание в этом курсе нужно решать на компьютере. Если ты занимаешься только на телефоне или планшете, то освоить материалы этого курса у тебя не получится :(</p><p>Теорию можно читать как угодно, но для практики тебе придётся найти компьютер. Есть люди, которые справляются без этого, <a href="https://res.cloudinary.com/mlshv/image/upload/v1547071023/prison-programmer_fv0ael.png" rel="nofollow noopener noreferrer">но это отдельная история</a>.</p><h2>Примеры кода</h2><p>Stepik может добавлять невидимые символы вместо пробелов, поэтому иногда скопированный код примеров не будет работать :(</p><h2>Лайфхак</h2><p>Для быстрого просмотра HTML-разметки и стилей без создания файлов, удобно использовать <a href="https://codepen.io/pen/" rel="nofollow noopener noreferrer">CodePen</a>.</p>')
LessonUnit.create!(order: 3, lesson: lesson1, content_block: '<h1 style="text-align: center;">О создателях</h1><p>Этот курс сделан в <a href="https://vk.com/itc.digital" rel="nofollow noopener noreferrer">ITC</a>. Мы — молодая команда практиков. Учим людей дизайну и разработке, пишем посты об образовании, технологиях и продуктивности.</p><p>За 3 года на наши курсы по разработке и дизайну пришло более 500 человек, большинство из которых начинали обучение с нуля.</p><h1 style="text-align: center;">О курсе</h1><p>Этот курс - инкарнация нашего классического оффлайнового курса, который мы проводим каждый год в <a href="https://rea.ru" rel="nofollow noopener noreferrer">РЭУ им. Плеханова</a> для всех желающих студентов бесплатно. Занятия проходят в формате лекций, а дома ребята делают задания и общаются в учебном чате.</p><p>Мы решили разместить материалы курса на Степике. Эта онлайн-реализация содержит все материалы и задания, которые мы даём нашим студентам, плюс содержит тесты на закрепление теории.</p><p>Мы очень ждём твоего фидбека, который поможет сделать курс полезнее и интереснее.</p><p>Пора приступать к занятиям. Удачи!</p>')

lesson2 = Lesson.create!(name: 'История интернета', description: 'Изучение нового', order: 2, section: section1)
LessonUnit.create!(order: 1, lesson: lesson2, content_block: '<p style="text-align: center;"><img alt="" src="https://pbs.twimg.com/media/Dunw0FXX4AEqs32.jpg:large"></p><h1 style="text-align: center;">История интернета</h1><p>Для начала мы хотим немного рассказать про интернет. Это поможет тебе увидеть общую картину и понять, что и почему ты сейчас будешь изучать.</p><p>История интернета начинается в 60-годы XX века. Впервые концепцию описал <a href="https://ru.wikipedia.org/wiki/%D0%9B%D0%B8%D0%BA%D0%BB%D0%B0%D0%B9%D0%B4%D0%B5%D1%80,_%D0%94%D0%B6%D0%BE%D0%B7%D0%B5%D1%84_%D0%9A%D0%B0%D1%80%D0%BB_%D0%A0%D0%BE%D0%B1%D0%BD%D0%B5%D1%82%D1%82" rel="nofollow noopener noreferrer">один американский учёный</a> и эпично назвал её «Галактическая сеть».</p><p>В 1969 американское агентство DARPA начало создавать экспериментальную сеть «с коммутацией пакетов». Её назвали ARPANET.</p><blockquote><a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BC%D1%83%D1%82%D0%B0%D1%86%D0%B8%D1%8F_%D0%BF%D0%B0%D0%BA%D0%B5%D1%82%D0%BE%D0%B2" rel="nofollow noopener noreferrer" title="Link: https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BC%D1%83%D1%82%D0%B0%D1%86%D0%B8%D1%8F_%D0%BF%D0%B0%D0%BA%D0%B5%D1%82%D0%BE%D0%B2http://">Коммутация пакетов</a> - способ передачи данных по сети. Принцип работы очень простой: делим информацию на маленькие пакеты и отправляем их независимо друг от друга. Это нужно для надёжности, скорости и эффективности.</blockquote><p>В декабре 1970 года Network Working Group придумала протокол управления сетью, а в 1971 - 1972 его реализовали в ARPANET. Благодаря этому, появилась возможность создавать сетевые приложения. Первым приложением стала <strong>электронная почта</strong>, её сделали в 1972-м.</p><p>Но это всё научные исследования. Интернет, каким мы его знаем, придумал Тим Бернерс-Ли. Он изобрёл технологии  URI/URL, HTTP,  и HTML.</p>')
LessonUnit.create!(order: 2, lesson: lesson2, content_block: '<h1 style="text-align: center;">URL</h1><p>Первая важная технология, которая позволила появиться интернету - URL. Она применяется для обозначения адресов почти всех ресурсов Интернета: сайты и сервера приложений вроде электронной почты. URL сочетает в себе две технологии:</p><ol><li><strong>URI </strong>- стандарт записи уникального адреса. Например, адрес сайта это URI: <a href="http://google.com" rel="nofollow noopener noreferrer" title="Link: http://google.com">http://google.com</a></li><li><strong>DNS </strong>- система доменных имён. У любого устройства в сети есть свой числовой адрес, он называется <strong>IP-адрес</strong>. Но людям удобнее запоминать буквы - доменные имена. DNS просто помогает найти IP-адрес по доменному имени. Пример: 173.194.44.40 это IP-адрес, а google.com - доменное имя, которое ему соответствует.</li></ol>')
LessonUnit.create!(order: 3, lesson: lesson2, content_block: '<h1>HTTP</h1><p><strong>HyperText Transfer Protocol</strong> (<em>гипертекст трансфер протокол</em>) - протокол передачи гипертекста. Ох уж эти учёные, любят называть простые вещи сложными именами. Давай разбираться.</p><p><strong>HTTP </strong>(<em>эйч-ти-ти-пи</em>)<strong> </strong>- протокол (то есть регламент, набор условных обозначений), который устанавливает определённый формат общения между <em>клиентом </em>и <em>сервером</em>. Суть его заключается в том, что клиент <em>посылает запросы</em> на URL, а сервер ему отвечает.</p><p><strong>Клиент </strong>- тот, кто посылает запросы. Когда ты открываешь сайт, ты - клиент.</p><p><strong>Сервер </strong>- тот, кто принимает запросы и отвечает на них. Когда ты открываешь сайт гугла, сервер гугла посылает тебе веб-страничку - отвечает на твой запрос.</p><p>А теперь про <strong>запросы</strong>. Что значит "послать запрос"? Если не углубляться в сложные научные определения, это означает отправить по сети сообщение с каким-нибудь требованием. Это работает так:</p><ol><li>ты посылаешь запрос</li><li>между тобой и сервером устанавливается соединение</li><li>сервер формирует ответ, посылает его тебе</li><li>соединение закрывается</li></ol><p>Вот и всё.</p><p>Так вот, протокол передачи гипер<strong>текста. </strong>"Текста", потому что сервер отвечает на запрос текстом определённого формата. А так как любые данные можно представить в виде текста, то получается, что через HTTP можно пересылать всё: картинки с котиками, гифки с котиками, и даже видео. С котиками.</p>')

lesson3 = Lesson.create!(name: 'HTML', description: 'Знакомство с курсом', order: 1, section: section2)
lesson4 = Lesson.create!(name: 'Теги', description: 'Изучение нового', order: 2, section: section2)
lesson5 = Lesson.create!(name: 'Атрибуты', description: 'Продолжение изучения', order: 3, section: section2)
lesson6 = Lesson.create!(name: 'Особенности интерпретации HTML', description: 'Продолжение изучения', order: 4, section: section2)

lesson7 = Lesson.create!(name: 'Структура HTML-документа', description: 'Знакомство с курсом', order: 1, section: section3)
lesson8 = Lesson.create!(name: 'Редакторы кода', description: 'Изучение нового', order: 2, section: section3)
lesson9 = Lesson.create!(name: 'Элементы и их виды', description: 'Продолжение изучения', order: 3, section: section3)
lesson10 = Lesson.create!(name: 'Списки', description: 'Продолжение изучения', order: 4, section: section3)
lesson11 = Lesson.create!(name: 'Изображения', description: 'Продолжение изучения', order: 5, section: section3)


